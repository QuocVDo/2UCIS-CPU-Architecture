101001000 //load MSW into r0
001110000 //r6 = ^(b11:b9)
111001111 //r1 = 0. r1 now contains LSW address
101001000 //load LSW
110000111 //comment
110000101 //r0 = 0 0 0 0 b8 b7 b6 b5
001100000 //r4 = ^(b8:b5)
000100110 //r4 = r4 ^ r6 = ^(b11:b5) = p8
111001001 //r1 = 1.
101001000 //Load MSW
110000011 //comment
110000010 //r0 = b11 b10 b9 0 0 0 0 0
000101101 //Clear r5
000101000 //r5 = b11 b10 b9 0 0 0 0 0
111001111 //r1 = 0
101001000 //Load LSW
110000111 //comment
110000101 //r0 = 0 0 0 0 b8 b7 b6 b5
110000001 //r0 = 0 0 0 b8 b7 b6 b5 0
010000101 //r0 = b11 b10 b9 b8 b7 b6 b5 0
010000100 //r0 = b11 b10 b9 b8 b7 b6 b5 p8
101010100 //Store MSW
111010111 //r2 = 30 (address of LSW)
101001000 //load msw r0 = b8:b1
100110000 //
001110110 //
001101101 //
000101110 //
110101011 //
110101001 //
111001001 //
101001000 //MSW
110000101 //r0 = 0 0 0 0 0 0 b11 b10
001110000 //r6 = ^(b11:10)---------------1010 1010. 6 = 1
111001111 //r1 = 0
101001000 //Load LSW----------------------------------------LSW = 0101 0101
100100001 //r4 = 0 b7 b6 0 b4 b3 0 b1 -----------
001100100 //r4 = ^(b7b6b4b3b1)
000100110 //r4 = ^(b11b10b7b6b4 b3b1) = p2
110100010 //r4 = 0 0 0 0 0 p2 0 0
010100101 //r4 = 0 0 0 p4 0 p2 0 0
100101010 //r5 = 0 b7 0 b5 b4 0 b2 b1
001101101 //r5 = ^(b7b5b4b2b1)
111001001 //r1 = 1 (MSW)
101001000 //Load MSW ---------------------------MSW = 0000 0101
100110011 //r6 = 0 0 0 0 0 b11 0 b9
001110110 //r6 = ^(b11b9)
000101110 //r5 = ^(b11b9b7b5b4b2b1) = p1 -----------------------------------------------
110101001 //-------------------------------move it to lect
010100101 //r4 = 0 0 0 P4 0 p2 p1 0        ---------0101 1010 = 0001 0100
111001111 //r1 = 0
101001000 //Load LSW
110000011 //comment
110000001 //r0 = b4 b3 b2 b1 0 0 0 0
001110000 //r6 = ^(b4b3b2b1)
001101100 //r5 = ^(p4p2p1) -------------------------------r5 gets set to 0
000101110 //r5 = p0
010100101 //r4 = 0 0 0 p4 0 p2 p1 p0
110000111 //comment
110000101 //r3 = b1 (because the last bit shifted out gets saved)
100011101 //grab b1 put it in r3
110000101 //r0 = 0 0 0 0 0 b4 b3 b2
000110110 //Clear r6
000110011 //r6 = r3 = b1
110110011 //r6 = 0 0 0 0 b1 0 0 0
010100110 //r4 = 0 0 0 p4 b1 p2 p1 p0
110000011 //comment
110000010 //r0 = b4 b3 b2 0 0 0 0 0
010000100 //r0 = b4 b3 b2 p4 b1 p2 p1 p0
101010100 //Store LSW
111001011 //comment
111010011 //comment
000110110 //clear r6
111110011 //r6 = 0000 0011
110110010 //r6 = 0000 1100
111110011 //r6 = 0000 1111
110110001 //r6 = 0001 1110
111110001 //r6 = 31
000111111 //clear r7
111111001 //0000 0001
110111010 //0000 0100
111111001 //0000 0101
110111010 //0001 0100 r7 = 20
111111010 //2
111111000 //
011001110 //If r1 = r6 jump to DONE
000111111 //Clear r7
011111111 //Compare with itself unconditional jump to top of loop
100000111